#!/bin/bash
source pipe-tools-utils

THIS_SCRIPT_DIR="$( cd "$(dirname "${BASH_SOURCE[0]}")" ; pwd -P )"
# source ${THIS_SCRIPT_DIR}/pipeline.sh
ASSETS=${THIS_SCRIPT_DIR}/../assets
ARGS=( \
  SOURCE_QUERY \
  VESSEL_INFO \
  VESSEL_DATABASE \
  SPATIAL_MEASURES \
  COUNTRY_CODES \
  VOYAGES \
  NAMED_ANCHORAGES \
  FISHING_VESSELS \
  MAX_MEDIAN_SPEED_KNOTS \
  DEST_TABLE \
)

################################################################################
# Validate and extract arguments
################################################################################
display_usage() {
  echo -e "\nUsage:\n$0 SOURCE_QUERY VESSEL_INFO VESSEL_DATABASE SPATIAL_MEASURES COUNTRY_CODES VOYAGES NAMED_ANCHORAGES FISHING_VESSELS MAX_MEDIAN_SPEED_KNOTS DEST_TABLE"
}

if [[ $# -ne ${#ARGS[@]} ]]
then
    display_usage
    exit 1
fi

ARG_VALUES=("$@")
PARAMS=()
for index in ${!ARGS[*]}; do
  echo "${ARGS[$index]}=${ARG_VALUES[$index]}"
  declare "${ARGS[$index]}"="${ARG_VALUES[$index]}"
done

echo "Running $0"
echo "  SOURCE_QUERY: $SOURCE_QUERY"
echo "  VESSEL_INFO: $VESSEL_INFO"
echo "  VESSEL_DATABASE: $VESSEL_DATABASE"
echo "  SPATIAL_MEASURES: $SPATIAL_MEASURES"
echo "  COUNTRY_CODES: $COUNTRY_CODES"
echo "  VOYAGES: $VOYAGES"
echo "  NAMED_ANCHORAGES: $NAMED_ANCHORAGES"
echo "  FISHING_VESSELS: $FISHING_VESSELS"
echo "  MAX_MEDIAN_SPEED_KNOTS: $MAX_MEDIAN_SPEED_KNOTS"
echo "  DEST_TABLE: $DEST_TABLE"
################################################################################
# Force that the destination table exists
################################################################################
echo "Ensuring events table ${DEST_TABLE} exists"
TABLE_DESC=(
  "* Pipeline: ${PIPELINE} ${PIPELINE_VERSION}"
  "* Source: ${SOURCE_QUERY}"
  "* Command:"
  "$(basename $0)"
  "$@"
)
TABLE_DESC=$( IFS=$'\n'; echo "${TABLE_DESC[*]}" )
SCHEMA=${ASSETS}/bigquery/events.schema.json
bq mk --force \
  --description "${TABLE_DESC}" \
  --schema ${SCHEMA} \
  ${DEST_TABLE}
if [ "$?" -ne 0 ]; then
  echo "  Unable to create table ${DEST_TABLE}"
  exit 1
fi
echo "  Events table exists"

################################################################################
# Inserting new records
################################################################################
echo "Regenerating records"
SQL=${ASSETS}/bigquery/carrier-encounter-events.sql.j2
jinja2 ${SQL} \
  -D source_query=${SOURCE_QUERY//:/.} \
  -D vessel_info=${VESSEL_INFO//:/.} \
  -D vessel_database=${VESSEL_DATABASE//:/.} \
  -D spatial_measures=${SPATIAL_MEASURES//:/.} \
  -D country_codes=${COUNTRY_CODES//:/.} \
  -D voyages=${VOYAGES//:/.} \
  -D named_anchorages=${NAMED_ANCHORAGES//:/.} \
  -D fishing_vessels=${FISHING_VESSELS//:/.} \
  -D max_median_speed_knots=${MAX_MEDIAN_SPEED_KNOTS} \
  | bq query --max_rows=0 --allow_large_results --replace --destination_table ${DEST_TABLE}

if [ "$?" -ne 0 ]; then
  echo "  Unable to insert records for table ${DEST_TABLE}"
  exit 1
fi

echo "${DEST_TABLE} Done."
