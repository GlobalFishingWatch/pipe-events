#
# Regions data
#
source_regions as (
  SELECT
    *,
  FROM `{{ regions_table }}`
),
gridded_regions as(
  select
    * except(s2_cells),
  from source_regions 
  cross join unnest (s2_cells) as s2_cell
),
create_event_region_matches as (
    SELECT events.event_id, id, layer,
    FROM
      {{ complete_events_table }} AS events
    JOIN gridded_regions r 
    ON events.s2_cell = r.s2_cell
    WHERE ST_INTERSECTS(events.geo, r.geo)
  ),
  event_by_layer_by_id as (
    select 
      event_id, layer, id
    from create_event_region_matches
    group by 1, 2, 3
  ),
  events_by_layer as(
    select
      event_id, CONCAT('"', layer, '":' ,TO_JSON_STRING(array_agg(id))) as json_fragment
    from event_by_layer_by_id
    group by event_id, layer
  ),
  event_with_region as (
    select
      event_id, 
      parse_regions_to_struct(CONCAT( "{", STRING_AGG(json_fragment, ","), "}")) as regions
    from events_by_layer
    group by 1
  )